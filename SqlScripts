CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(255) NOT NULL,
  role VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE country_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  code VARCHAR(10) NOT NULL,
  name VARCHAR(100) NOT NULL,
  language VARCHAR(100),
  phoneCode VARCHAR(10),
  addressAdditionalFields TEXT,
  bankAccAdditionalFields TEXT,
  companyAddtionalFields TEXT,
  isactive BOOLEAN DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp of last update
);
CREATE TABLE state_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  stateName VARCHAR(100) NOT NULL,
  stateCode VARCHAR(50) NOT NULL,
  gstCode VARCHAR(20),
  isactive BOOLEAN DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp of last update
);
CREATE TABLE region_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  regionName VARCHAR(255) NOT NULL,
  regionCode VARCHAR(50),
  stateIds VARCHAR(255),
  isactive BOOLEAN DEFAULT TRUE,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP -- Timestamp for when the region was last updated
);
CREATE TABLE company_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  companyName VARCHAR(255) NOT NULL,
  Website VARCHAR(255),
  Email VARCHAR(255),
  independent TINYINT(1) DEFAULT 0,
  parentCompanyId INT DEFAULT NULL,
  logopath VARCHAR(255),
  digitalSignPath VARCHAR(255),
  description TEXT,
  companyAddtionalFields TEXT,
  isactive TINYINT(1) DEFAULT 1,
  updated_by INT NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE company_location_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  companyId INT NOT NULL,
  countryId INT NOT NULL,
  stateId INT NOT NULL,
  address1 VARCHAR(255) NOT NULL,
  address2 VARCHAR(255),
  address3 VARCHAR(255),
  additionalAddressDetails TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (companyId) REFERENCES company_info(id) ON DELETE CASCADE,
  FOREIGN KEY (countryId) REFERENCES country_info(id) ON DELETE CASCADE,
  FOREIGN KEY (stateId) REFERENCES state_info(id) ON DELETE CASCADE
);
CREATE TABLE bank_account_type_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  accountTypeName VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (countryId) REFERENCES country_info(id) ON DELETE CASCADE,
  FOREIGN KEY (updated_by) REFERENCES user_info(id) ON DELETE
  SET NULL
);
CREATE TABLE IF NOT EXISTS company_account_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  companyId INT NOT NULL,
  countryId INT NOT NULL,
  isDefaultAccount TINYINT(1) NOT NULL,
  bankAccountTypeId INT NOT NULL,
  bankName VARCHAR(255) NOT NULL,
  bankAddress TEXT,
  accountNumber VARCHAR(50) NOT NULL,
  additionalFieldDetails JSON,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (companyId) REFERENCES company_info(id),
  FOREIGN KEY (countryId) REFERENCES country_info(id),
  FOREIGN KEY (bankAccountTypeId) REFERENCES bank_account_type_info(id)
) CREATE TABLE production_type_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  productionTypeName VARCHAR(255) NOT NULL,
  updated_by INT NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  -- 1 for active, 0 for inactive
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (updated_by) REFERENCES users(id) -- assuming you have a `users` table for `updated_by`
);
CREATE TABLE industry_master_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  industryName VARCHAR(255) NOT NULL,
  productionTypeId INT NOT NULL,
  -- Foreign Key to the production_type_info table
  updated_by INT NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  -- 1 for active, 0 for inactive
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (productionTypeId) REFERENCES production_type_info(id),
  FOREIGN KEY (updated_by) REFERENCES users(id) -- assuming you have a `users` table for `updated_by`
);