CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(255) NOT NULL,
  role VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE country_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  code VARCHAR(10) NOT NULL,
  name VARCHAR(100) NOT NULL,
  language VARCHAR(100),
  phoneCode VARCHAR(10),
  addressAdditionalFields TEXT,
  bankAccAdditionalFields TEXT,
  companyAddtionalFields TEXT,
  isactive BOOLEAN DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE state_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  stateName VARCHAR(100) NOT NULL,
  stateCode VARCHAR(50) NOT NULL,
  gstCode VARCHAR(20),
  isactive BOOLEAN DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE region_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  regionName VARCHAR(255) NOT NULL,
  regionCode VARCHAR(50),
  stateIds VARCHAR(255),
  isactive BOOLEAN DEFAULT TRUE,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  regionHeadName VARCHAR(255),
  -- Name of the region head
  regionHeadEcode VARCHAR(50),
  -- Employee code of the region head
  regionHeadEmail VARCHAR(255),
  -- Email of the region head
  fromDate DATE NULL -- Start date for the region's active status (optional)
);
CREATE TABLE company_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  companyName VARCHAR(255) NOT NULL,
  Website VARCHAR(255),
  Email VARCHAR(255),
  independent TINYINT(1) DEFAULT 0,
  parentCompanyId INT DEFAULT NULL,
  logopath VARCHAR(255),
  digitalSignPath VARCHAR(255),
  description TEXT,
  companyAddtionalFields TEXT,
  isactive TINYINT(1) DEFAULT 1,
  updated_by INT NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE company_location_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  companyId INT NOT NULL,
  countryId INT NOT NULL,
  stateId INT NOT NULL,
  address1 VARCHAR(255) NOT NULL,
  address2 VARCHAR(255),
  address3 VARCHAR(255),
  additionalAddressDetails TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (companyId) REFERENCES company_info(id) ON DELETE CASCADE,
  FOREIGN KEY (countryId) REFERENCES country_info(id) ON DELETE CASCADE,
  FOREIGN KEY (stateId) REFERENCES state_info(id) ON DELETE CASCADE
);
CREATE TABLE bank_account_type_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  countryId INT NOT NULL,
  accountTypeName VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (countryId) REFERENCES country_info(id) ON DELETE CASCADE,
  FOREIGN KEY (updated_by) REFERENCES user_info(id) ON DELETE
  SET NULL
);
CREATE TABLE IF NOT EXISTS company_account_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  companyId INT NOT NULL,
  countryId INT NOT NULL,
  isDefaultAccount TINYINT(1) NOT NULL,
  bankAccountTypeId INT NOT NULL,
  bankName VARCHAR(255) NOT NULL,
  bankAddress TEXT,
  accountNumber VARCHAR(50) NOT NULL,
  additionalFieldDetails JSON,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (companyId) REFERENCES company_info(id),
  FOREIGN KEY (countryId) REFERENCES country_info(id),
  FOREIGN KEY (bankAccountTypeId) REFERENCES bank_account_type_info(id)
);
CREATE TABLE production_type_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  productionTypeName VARCHAR(255) NOT NULL,
  updated_by INT NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (updated_by) REFERENCES users(id)
);
CREATE TABLE industry_master_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  industryName VARCHAR(255) NOT NULL,
  subIndustryCategory VARCHAR(255) NOT NULL,
  updated_by INT NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE group_industry_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  groupIndustryName VARCHAR(255) NOT NULL,
  industryIds VARCHAR(255) NOT NULL,
  updated_by INT NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (updated_by) REFERENCES users(id)
);
CREATE TABLE industry_head_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  industryHeadName VARCHAR(255) NOT NULL,
  industryIds VARCHAR(255) NOT NULL,
  isRegionWise BOOLEAN NOT NULL,
  countryIds VARCHAR(255) NOT NULL,
  regionIds VARCHAR(255) NOT NULL,
  stateIds VARCHAR(255) NOT NULL,
  startDate DATE NOT NULL,
  endDate DATE NOT NULL,
  updated_by VARCHAR(255) NOT NULL,
  isActive BOOLEAN DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE sales_manager_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(50) NOT NULL UNIQUE,
  industryHeadIds VARCHAR(255),
  fromDate DATE NOT NULL,
  description TEXT,
  updated_by VARCHAR(255) NOT NULL,
  sales_manager_email VARCHAR(255) UNIQUE,
  companyId INT NOT NULL,
  -- Add email column
  isActive BOOLEAN DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE account_manager_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  code VARCHAR(100) NOT NULL UNIQUE,
  industryHeadIds VARCHAR(255),
  companyId INT NOT NULL,
  fromDate DATE NOT NULL,
  -- Add DATE for fromDate
  description TEXT,
  updated_by VARCHAR(255) NOT NULL,
  account_manager_email VARCHAR(255) UNIQUE,
  -- Add email column
  isActive BOOLEAN DEFAULT 1,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE technology_group_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE technology_subgroup_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  techGroupIds VARCHAR(255),
  name VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE technology_name_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  techGroupIds VARCHAR(255),
  techSubgroupIds VARCHAR(255),
  techName VARCHAR(255) NOT NULL,
  description TEXT,
  isActive BOOLEAN DEFAULT TRUE,
  updatedBy INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE oem_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  oemName VARCHAR(255) NOT NULL,
  type ENUM('License', 'AMC') NOT NULL,
  productName VARCHAR(255) NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  updatedBy VARCHAR(255),
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE polestar_product_sales_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  productName VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1,
  updatedBy VARCHAR(255) NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
REATE TABLE project_service_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  isActive TINYINT(1) DEFAULT 1 COMMENT '1 for active, 0 for inactive',
  updatedBy VARCHAR(255) NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE financial_year_master (
  id INT AUTO_INCREMENT PRIMARY KEY,
  startYear INT NOT NULL,
  endYear INT NOT NULL,
  financialYearName VARCHAR(255) NOT NULL,
  isActive TINYINT(1) DEFAULT 1,
  updatedBy INT NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE region_head_info (
  id INT AUTO_INCREMENT PRIMARY KEY,
  regionId VARCHAR(255) NOT NULL,
  countryId INT NOT NULL,
  companyId INT NOT NULL,
  regionHeadName VARCHAR(255) NOT NULL,
  regionHeadEcode VARCHAR(255) NOT NULL,
  regionHeadEmail VARCHAR(255) NOT NULL,
  fromDate DATE,
  isActive TINYINT(1) DEFAULT 1,
  updated_by INT,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

create table currency_exchange_table (
id int primary key auto_increment not null,
currencyCode varchar(10) not null,
exchangeRate DECIMAL(10,4) default null,
baseCurrency varchar(10) default 'INR',
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);